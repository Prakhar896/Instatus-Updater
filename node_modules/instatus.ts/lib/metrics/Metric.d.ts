import { Base, InstatusClient } from '../';
import { MetricData, MetricDataPoint, MetricDataPointPost, MetricPut, RawMetric } from '../utils/Typings';
/**
 * Represents a Metric
 *
 * @export
 * @class Metric
 * @extends {Base}
 */
export default class Metric extends Base {
    id: string;
    name: string;
    active: boolean;
    order: number;
    suffix: string;
    data: MetricData[];
    /**
     * @param {InstatusClient} client The client that instantiated this
     * @param {RawMetric} data The metric raw data
     * @memberof Metric
     */
    constructor(client: InstatusClient, data: RawMetric);
    /**
     * Gets this metric
     *
     * @return {*}  {Promise<Metric>}
     * @memberof Metric
     */
    get(): Promise<Metric>;
    /**
     * Updates this metric
     *
     * @param {MetricPut} data
     * @return {*}  {Promise<Metric>}
     * @memberof Metric
     */
    update(data: MetricPut): Promise<Metric>;
    /**
     * Deletes this metricÂº
     *
     * @return {*}  {Promise<Metric>}
     * @memberof Metric
     */
    delete(): Promise<Metric>;
    /**
     * Adds a datapoint to this metric
     *
     * @param {MetricDataPointPost} data
     * @return {*}  {Promise<MetricDataPoint>}
     * @memberof Metric
     */
    add(data: MetricDataPointPost): Promise<MetricDataPoint>;
    /**
     * Adds multiple datapoints to this metric
     *
     * @param {MetricDataPointPost[]} data
     * @return {*}  {Promise<MetricDataPointPost[]>}
     * @memberof Metric
     */
    adds(data: MetricDataPointPost[]): Promise<MetricDataPointPost[]>;
    private _check;
    private _parse;
}
