import { AxiosResponse } from 'axios';
import { Base, Incident, InstatusClient } from '../';
import { RawComponent, ComponentStatus, ComponentPost, ComponentDelete } from '../utils/Typings';
/**
 * Represents an Component
 *
 * @export
 * @class Component
 * @extends {Base}
 */
export default class Component extends Base {
    id: string;
    name: string;
    description: string | undefined;
    status: ComponentStatus;
    uniqueEmail?: string;
    showUptime: boolean;
    order: Number;
    group?: string;
    incidents: Incident[];
    /**
     * @param {InstatusClient} client The client that instantiated this
     * @param {RawComponent} data The component raw data
     * @memberof Component
     */
    constructor(client: InstatusClient, data: RawComponent);
    /**
     * Gets this component
     *
     * @return {*}  {Promise<Component>}
     * @memberof ComponentManager
     */
    get(): Promise<Component>;
    /**
     * Edits this component
     *
     * @param {ComponentPost} data The data to update the component
     * @return {*}  {Promise<Component>}
     * @memberof ComponentManager
     */
    update(data: ComponentPost): Promise<Component>;
    /**
     * Deletes this component
     *
     * @return {*}  {Promise<AxiosResponse<ComponentDelete>>}
     * @memberof ComponentManager
     */
    delete(): Promise<AxiosResponse<ComponentDelete>>;
    private _check;
    private _parse;
}
