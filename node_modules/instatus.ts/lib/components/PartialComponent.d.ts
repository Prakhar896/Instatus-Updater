import { AxiosResponse } from 'axios';
import { Base, Component, InstatusClient } from '../';
import { ComponentStatus, ComponentPost, ComponentDelete, PartialSite } from '../utils/Typings';
/**
 * Represents an partial component returned by the incident
 *
 * @export
 * @class Component
 * @extends {Base}
 */
export default class PartialComponent extends Base {
    id: string;
    name: string;
    status: ComponentStatus;
    showUptime: boolean;
    site: PartialSite[];
    /**
     * @param {InstatusClient} client The client that instantiated this
     * @param {PartialComponent} data The partial component
     * @memberof Component
     */
    constructor(client: InstatusClient, data: PartialComponent);
    /**
     * Gets this component
     *
     * @return {*}  {Promise<Component>}
     * @memberof ComponentManager
     */
    get(): Promise<Component>;
    /**
     * Edits this component
     *
     * @param {ComponentPost} data The data to update the component
     * @return {*}  {Promise<Component>}
     * @memberof ComponentManager
     */
    update(data: ComponentPost): Promise<Component>;
    /**
     * Deletes this component
     *
     * @return {*}  {Promise<AxiosResponse<ComponentDelete>>}
     * @memberof ComponentManager
     */
    delete(): Promise<AxiosResponse<ComponentDelete>>;
    private _check;
    private _parse;
}
