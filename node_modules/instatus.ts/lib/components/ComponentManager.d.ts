import { AxiosResponse } from 'axios';
import { Base, Component } from '../';
import { ComponentDelete, ComponentPost } from '../utils/Typings';
/**
 * A manager of the components belonging to a status page
 *
 * @export
 * @class ComponentManager
 * @extends {Base}
 */
export default class ComponentManager extends Base {
    /**
     * Gets all components
     *
     * @return {Component[]}  {Promise<Component[]>}
     * @memberof ComponentManager
     */
    getAll(): Promise<Component[]>;
    /**
     * Gets one component
     *
     * @param {string} componentID The component ID
     * @return {*}  {Promise<Component>}
     * @memberof ComponentManager
     */
    get(componentID: string): Promise<Component>;
    /**
     * Creates an component
     *
     * @param {ComponentPost} data The data to crate the component
     * @return {*}  {Promise<Component>}
     * @memberof ComponentManager
     */
    add(data: ComponentPost): Promise<Component>;
    /**
     * Edits an component
     *
     * @param {string} componentID The component ID
     * @param {ComponentPost} data The data to update the component
     * @return {*}  {Promise<Component>}
     * @memberof ComponentManager
     */
    update(componentID: string, data: ComponentPost): Promise<Component>;
    /**
     * Deletes an component
     *
     * @param {string} componentID The component ID
     * @return {*}  {Promise<AxiosResponse<ComponentDelete>>}
     * @memberof ComponentManager
     */
    delete(componentID: string): Promise<AxiosResponse<ComponentDelete>>;
    private _check;
}
