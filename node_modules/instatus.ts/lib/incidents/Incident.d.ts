import { AxiosResponse } from 'axios';
import { Base, InstatusClient, IncidentsUpdates, PartialComponent } from '../';
import { RawIncident, IncidentStatus, IncidentPost, IncidentDelete } from '../utils/Typings';
/**
 * Represents an incident
 *
 * @export
 * @class Incident
 * @extends {Base}
 */
export default class Incident extends Base {
    id: string;
    name: string;
    status: IncidentStatus;
    started: Date;
    resolved?: Date;
    updates: IncidentsUpdates;
    components: PartialComponent[];
    /**
     * @param {InstatusClient} client The client that instantiated this
     * @param {RawIncident} data The incident raw data
     * @memberof Incident
     */
    constructor(client: InstatusClient, data: RawIncident);
    /**
     * Gets this incident
     *
     * @return {*}  {Promise<Incident>}
     * @memberof IncidentsManager
     */
    get(): Promise<Incident>;
    /**
     * Edits this incident
     *
     * @param {IncidentPost} data The data to edit the incident
     * @return {*}  {Promise<Incident>}
     * @memberof IncidentsManager
     */
    update(data: IncidentPost): Promise<Incident>;
    /**
     * Deletes this incident
     *
     * @return {*}  {Promise<AxiosResponse<IncidentDelete>>}
     * @memberof IncidentsManager
     */
    delete(): Promise<AxiosResponse<IncidentDelete>>;
    private _check;
    private _parse;
}
